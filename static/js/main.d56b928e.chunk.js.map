{"version":3,"sources":["components/filter/Filter.module.css","components/contactsList/ContactsList.module.css","redux/phonebook/phonebook-actions.js","components/contactsForm/ContactsForm.jsx","components/contactsList/ContactsList.jsx","components/filter/Filter.jsx","components/App.jsx","redux/phonebook/phonebookReducer.js","redux/store.js","index.js","components/contactsForm/ContactsForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","connect","contacts","phonebook","items","dispatch","onSubmit","useState","setName","setNumber","onHandleChange","e","target","value","className","s","form","preventDefault","some","user","toLowerCase","alert","title","data","type","pattern","required","onChange","addBtn","getFilteredContacts","allContacts","filter","normalizedFilter","contact","includes","onRemoveContact","map","delBtn","onClick","state","onChangeFilter","App","createReducer","_","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","phonebookReducer","devTools","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d56b928e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__1RgDp\",\"data\":\"Filter_data__3uUkx\",\"title\":\"Filter_title__9pe_T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delBtn\":\"ContactsList_delBtn__2gMi4\"};","import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('phonebook/Add', (name, number) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nexport const deleteContact = createAction('phonebook/Delete');\r\n\r\nexport const changeFilter = createAction('phonebookChangeFilter');\r\n","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../redux/phonebook/phonebook-actions';\r\nimport s from './ContactsForm.module.css';\r\n\r\nconst ContactsForm = ({ contacts, onSubmit }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const onHandleSubmit = e => {\r\n    e.preventDefault();\r\n    const searchRepeat = contacts.some(user => user.name.toLowerCase() === name.toLowerCase());\r\n    if (searchRepeat) {\r\n      alert(`${number.name} is already in contacts`);\r\n    } else {\r\n      onSubmit(name, number);\r\n    }\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const onHandleChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={onHandleSubmit}>\r\n      <label className={s.title}>\r\n        Name\r\n        <input\r\n          className={s.data}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={onHandleChange}\r\n        />\r\n      </label>\r\n      <label className={s.title}>\r\n        Number\r\n        <input\r\n          className={s.data}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={onHandleChange}\r\n        />\r\n      </label>\r\n\r\n      <button className={s.addBtn} type=\"submit\">\r\n        add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nconst mapStateToProps = ({ phonebook: { items } }) => ({\r\n  contacts: items,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(addContact(name, number)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsForm);\r\n","import s from './ContactsList.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/phonebook/phonebook-actions';\r\n\r\nconst ContactsList = ({ contacts, onRemoveContact }) => {\r\n  return (\r\n    <>\r\n      <ul>\r\n        {contacts?.map(contact => (\r\n          <li key={contact.id}>\r\n            {`${contact.name} : ${contact.number}`}\r\n            <button\r\n              className={s.delBtn}\r\n              type=\"button\"\r\n              name=\"delete\"\r\n              onClick={() => onRemoveContact(contact.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\nconst getFilteredContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return allContacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\r\n};\r\n\r\nconst mapStateToProps = ({ phonebook: { items, filter } }) => ({\r\n  contacts: getFilteredContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onRemoveContact: id => dispatch(deleteContact(id)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n","import s from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions';\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <>\r\n      <label className={s.title}>\r\n        Find contacts by name\r\n        <input className={s.data} type=\"text\" value={value} onChange={onChangeFilter} />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.phonebook.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChangeFilter: e => dispatch(changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n","import ContactsForm from './contactsForm/ContactsForm';\nimport ContactsList from './contactsList/ContactsList';\nimport Filter from './filter/Filter';\n\nconst App = () => {\n  return (\n    <>\n      <div>\n        <h1>Phonebook</h1>\n        <ContactsForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactsList />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport { addContact, deleteContact, changeFilter } from './phonebook-actions';\r\n\r\nconst initialState = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst items = createReducer([...initialState], {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport phonebookReducer from './phonebook/phonebookReducer';\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: phonebookReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsForm_form__2C-c8\",\"addBtn\":\"ContactsForm_addBtn__33vKj\",\"data\":\"ContactsForm_data__3efRM\",\"title\":\"ContactsForm_title__3Z2QA\"};"],"sourceRoot":""}